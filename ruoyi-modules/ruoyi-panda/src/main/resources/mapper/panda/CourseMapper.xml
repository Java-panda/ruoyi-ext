<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.panda.mapper.CourseMapper">
    
    <resultMap type="Course" id="CourseResult">
        <result property="courseId"    column="course_id"    />
        <result property="courseName"    column="course_name"    />
        <result property="teacherId"    column="teacher_id"    />
    </resultMap>

    <sql id="selectCourseVo">
        select course_id, course_name, teacher_id from course
    </sql>

    <select id="selectCourseList" parameterType="Course" resultMap="CourseResult">
        <include refid="selectCourseVo"/>
        <where>  
            <if test="courseName != null  and courseName != ''"> and course_name like concat('%', #{courseName}, '%')</if>
            <if test="teacherId != null "> and teacher_id = #{teacherId}</if>
        </where>
    </select>
    
    <select id="selectCourseByCourseId" parameterType="Long" resultMap="CourseResult">
        <include refid="selectCourseVo"/>
        where course_id = #{courseId}
    </select>
        
    <insert id="insertCourse" parameterType="Course">
        insert into course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="courseId != null">course_id,</if>
            <if test="courseName != null">course_name,</if>
            <if test="teacherId != null">teacher_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="courseId != null">#{courseId},</if>
            <if test="courseName != null">#{courseName},</if>
            <if test="teacherId != null">#{teacherId},</if>
         </trim>
    </insert>

    <update id="updateCourse" parameterType="Course">
        update course
        <trim prefix="SET" suffixOverrides=",">
            <if test="courseName != null">course_name = #{courseName},</if>
            <if test="teacherId != null">teacher_id = #{teacherId},</if>
        </trim>
        where course_id = #{courseId}
    </update>

    <delete id="deleteCourseByCourseId" parameterType="Long">
        delete from course where course_id = #{courseId}
    </delete>

    <delete id="deleteCourseByCourseIds" parameterType="String">
        delete from course where course_id in 
        <foreach item="courseId" collection="array" open="(" separator="," close=")">
            #{courseId}
        </foreach>
    </delete>
</mapper>