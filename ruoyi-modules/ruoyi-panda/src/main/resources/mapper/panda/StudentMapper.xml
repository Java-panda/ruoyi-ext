<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.panda.mapper.StudentMapper">
    
    <resultMap type="Student" id="StudentResult">
        <result property="studentId"    column="student_id"    />
        <result property="studentName"    column="student_name"    />
        <result property="studentAge"    column="student_age"    />
        <result property="gender"    column="gender"    />
    </resultMap>

    <sql id="selectStudentVo">
        select student_id, student_name, student_age, gender from student
    </sql>

    <select id="selectStudentList" parameterType="Student" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        <where>  
            <if test="studentName != null  and studentName != ''"> and student_name like concat('%', #{studentName}, '%')</if>
            <if test="studentAge != null "> and student_age = #{studentAge}</if>
            <if test="gender != null  and gender != ''"> and gender = #{gender}</if>
        </where>
    </select>
    
    <select id="selectStudentByStudentId" parameterType="Long" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        where student_id = #{studentId}
    </select>
        
    <insert id="insertStudent" parameterType="Student">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null">student_id,</if>
            <if test="studentName != null">student_name,</if>
            <if test="studentAge != null">student_age,</if>
            <if test="gender != null">gender,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null">#{studentId},</if>
            <if test="studentName != null">#{studentName},</if>
            <if test="studentAge != null">#{studentAge},</if>
            <if test="gender != null">#{gender},</if>
         </trim>
    </insert>

    <update id="updateStudent" parameterType="Student">
        update student
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentName != null">student_name = #{studentName},</if>
            <if test="studentAge != null">student_age = #{studentAge},</if>
            <if test="gender != null">gender = #{gender},</if>
        </trim>
        where student_id = #{studentId}
    </update>

    <delete id="deleteStudentByStudentId" parameterType="Long">
        delete from student where student_id = #{studentId}
    </delete>

    <delete id="deleteStudentByStudentIds" parameterType="String">
        delete from student where student_id in 
        <foreach item="studentId" collection="array" open="(" separator="," close=")">
            #{studentId}
        </foreach>
    </delete>
</mapper>